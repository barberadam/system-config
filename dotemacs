(push "~/.emacs.d/" load-path)

;; add marmalade functionality:
(require 'package)
(add-to-list 'package-archives 
    '("marmalade" .
      "http://marmalade-repo.org/packages/"))
(add-to-list 'package-archives 
    '("melpa" .
      "http://melpa.milkbox.net/packages/") 'APPEND)
(package-initialize)

;; add auto-complete
(add-to-list 'load-path "~/.emacs.d/auto-complete-1.3.1")
(require 'auto-complete)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(require 'auto-complete-config)
(ac-config-default)
(global-auto-complete-mode t)

;; Add ace-jump-mode to C-c spc
(global-set-key (kbd "C-c SPC") 'ace-jump-mode) 

;; IDO  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(global-set-key (kbd "M-x") 'smex) ;; for M-x
(setq ido-enable-flex-matching t)
(setq ido-everywhere t) 
(ido-mode 1) ;; turn on ido mode
(ido-ubiquitous-mode 1) ;; replace stock completion with ido in most places
(projectile-mode 1) ;; searching project dirs (including git repos)
;;(ido-vertical-mode -1)
(flx-ido-mode 1) ;; flexible matching
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; EMACS PERFORMED CUSTOMIZATIONS ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(add-to-list 'default-frame-alist '(font . "DejaVu Sans Mono-10"))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(LaTeX-command "latex --src-specials")
 '(custom-safe-themes (quote ("1f4e6cf4cb3bdba8afdb9244e037698238080eeecb209084602f7d717225f102" default)))
 '(matlab-comment-line-s "% ")
 '(matlab-comment-on-line-s "% ")
 '(matlab-comment-region-s "% ")
 '(matlab-shell-ask-MATLAB-for-completions nil)
 '(preview-gs-options (quote ("-q" "-dNOSAFER" "-dNOPAUSE" "-DNOPLATFONTS" "-dPrinted" "-dTextAlphaBits=4" "-dGraphicsAlphaBits=4")))
 '(preview-scale-function 1.25)
 '(safe-local-variable-values (quote ((TeX-auto-parse-length . 999999) (TeX-auto-regexp-list . TeX-auto-full-regexp-list) (TeX-parse-self . t) (TeX-auto-save . t)))))

(winner-mode 1)
(defun my-make-CR-do-indent ()
  (define-key c-mode-base-map "\C-m" 'c-context-line-break))
(add-hook 'c-initialization-hook 'my-make-CR-do-indent)
;; Turn on CamelCase mode by default
(add-hook 'c-mode-common-hook
	  (lambda () (subword-mode 1)))
(add-hook 'c++-mode-common-hook
	  (lambda () (subword-mode 1)))
(add-hook 'python-mode-hook
	  (lambda () (subword-mode 1)))
;; Choose default cc-mode styles
(setq c-default-style '((other . "linux")))
(setq c-basic-offset 4)
;; enable clipboard yanking
(setq x-select-enable-clipboard t)
(setq inhibit-startup-message t)
(setq-default fill-column 80) ;; set default fill column value
;; Turn on syntax highlighting
(global-font-lock-mode t)
;; Bind a new key for changing line wrapping properties:
(define-key global-map [f5] 'toggle-truncate-lines)
;; Miscellaneous bindings:
(global-set-key "\M-g" 'goto-line)
;; bind regex forward and backward search to a easier keyboard
;; commands:
(global-set-key (kbd "C-M-s") 'isearch-forward-regexp)
(global-set-key (kbd "C-M-r") 'isearch-backward-regexp)

;; start server if not already running when using just 'emacs' on
;; command line
(require 'server)
(or (server-running-p)
    (server-start))

(load-theme 'zenburn t)

;; MATLAB ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Add matlab-emacs mode
(add-to-list 'load-path "~/src/matlab-emacs/") 
;(load-library "matlab-load")
(autoload 'matlab-mode "matlab" "Matlab Editing Mode" t)
(add-to-list
 'auto-mode-alist
 '("\\.m$" . matlab-mode))
(setq matlab-indent-function t)
(setq matlab-shell-command "matlab")
(setq matlab-shell-command-switches '("-nodesktop"))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; BUFFER MOVE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(require 'buffer-move)
(global-set-key (kbd "<C-S-up>")     'buf-move-up)
(global-set-key (kbd "<C-S-down>")   'buf-move-down)
(global-set-key (kbd "<C-S-left>")   'buf-move-left)
(global-set-key (kbd "<C-S-right>")  'buf-move-right)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;; LATEX ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Add Latex functionality
(require 'tex)
(setq-default TeX-master nil)
(setq TeX-parse-self t)
(setq TeX-auto-save t)
;; Add reverse LaTeX searching:
(setq TeX-source-specials-mode 1)
(setq Tex-source-specials-view-start-server t)
(add-to-list 'TeX-command-list '("View" "%V" TeX-run-discard nil t))
(add-to-list 'TeX-output-view-style 
            '("^dvi$" "." 
              "%(o?)xdvi -watchfile 1 %dS %d"))
;; turn on reftex by default
(add-hook 'LaTeX-mode-hook 'reftex-mode)
(add-hook 'bibtex-mode-hook 'reftex-mode)
(setq TeX-electric-sub-and-superscript t)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; PYTHON:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
;; Add python-mode.
(add-to-list 'load-path "~/.emacs.d/python-mode.el-6.1.1/")
(add-to-list 'load-path "~/.emacs.d/python-mode.el-6.1.1/completion/")
(add-to-list 'load-path "~/.emacs.d/python-mode.el-6.1.1/extensions/")
(setq py-install-directory "~/.emacs.d/python-mode.el-6.1.1/")
(autoload 'python-mode "python" "Python Editing Mode" t)
(add-to-list
 'auto-mode-alist
 '("\\.py$" . python-mode))
(require 'python-mode)
(require 'highlight-indentation)
(require 'column-marker)
;; make python mode recognize '_' as a word separator
;; (modify-syntax-entry ?_ "_" python-mode-syntax-table)
(modify-syntax-entry ?_ "_" python-mode-syntax-table)
(add-hook 'python-mode-hook 'highlight-indentation)
;;enable cython-mode
;;(require 'cython-mode)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;; FLYSPELL ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Turn on FlySpell for some things by default
;(add-hook 'c-mode-hook 'flyspell-prog-mode) ;; for individual modes
(setq flyspell-use-meta-tab nil)
(add-hook 'text-mode-hook 'turn-on-flyspell)
(add-hook 'change-log-mode-hook 'turn-on-flyspell)
(add-hook 'tex-mode-hook 'turn-on-flyspell)
(add-hook 'tex-mode-hook (function (lambda () (setq ispell-parser 'tex))))
(add-hook 'texinfo-mode
	  '(lambda () (setq flyspell-generic-check-word-p
			    'texinfo-mode-flyspell-verify)))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; ORG MODE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Set up org mapping and other stuff
(require 'org)
(define-key global-map "\C-cl" 'org-store-link)
(define-key global-map "\C-ca" 'org-agenda)
(setq org-log-done t)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(setq line-number-mode t)
(setq column-number-mode t)
